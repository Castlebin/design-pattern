public class com.heller.asm.demo2.FinallyTest
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #7.#30         // java/lang/Object."<init>":()V
   #2 = Fieldref           #31.#32        // java/lang/System.out:Ljava/io/PrintStream;
   #3 = Methodref          #33.#34        // java/io/PrintStream.println:(I)V
   #4 = Methodref          #6.#35         // com/heller/bytecode/FinallyTest.test1:(I)I
   #5 = Methodref          #6.#36         // com/heller/bytecode/FinallyTest.test2:(I)I
   #6 = Class              #37            // com/heller/bytecode/FinallyTest
   #7 = Class              #38            // java/lang/Object
   #8 = Utf8               <init>
   #9 = Utf8               ()V
  #10 = Utf8               Code
  #11 = Utf8               LineNumberTable
  #12 = Utf8               LocalVariableTable
  #13 = Utf8               this
  #14 = Utf8               Lcom/heller/bytecode/FinallyTest;
  #15 = Utf8               test1
  #16 = Utf8               (I)I
  #17 = Utf8               a
  #18 = Utf8               I
  #19 = Utf8               StackMapTable
  #20 = Class              #39            // java/lang/Throwable
  #21 = Utf8               test2
  #22 = Utf8               b
  #23 = Utf8               main
  #24 = Utf8               ([Ljava/lang/String;)V
  #25 = Utf8               args
  #26 = Utf8               [Ljava/lang/String;
  #27 = Utf8               num
  #28 = Utf8               SourceFile
  #29 = Utf8               FinallyTest.java
  #30 = NameAndType        #8:#9          // "<init>":()V
  #31 = Class              #40            // java/lang/System
  #32 = NameAndType        #41:#42        // out:Ljava/io/PrintStream;
  #33 = Class              #43            // java/io/PrintStream
  #34 = NameAndType        #44:#45        // println:(I)V
  #35 = NameAndType        #15:#16        // test1:(I)I
  #36 = NameAndType        #21:#16        // test2:(I)I
  #37 = Utf8               com/heller/bytecode/FinallyTest
  #38 = Utf8               java/lang/Object
  #39 = Utf8               java/lang/Throwable
  #40 = Utf8               java/lang/System
  #41 = Utf8               out
  #42 = Utf8               Ljava/io/PrintStream;
  #43 = Utf8               java/io/PrintStream
  #44 = Utf8               println
  #45 = Utf8               (I)V
{
  public com.heller.asm.demo2.FinallyTest();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/heller/bytecode/FinallyTest;

  public static int test1(int);
    descriptor: (I)I
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=3, args_size=1
         0: iinc          0, 20
         3: iload_0
         4: istore_1
         5: iinc          0, 30
         8: iload_0
         9: ireturn
        10: astore_2
        11: iinc          0, 30
        14: iload_0
        15: ireturn
      Exception table:
         from    to  target type
             0     5    10   any
      LineNumberTable:
        line 7: 0
        line 8: 3
        line 10: 5
        line 11: 8
        line 10: 10
        line 11: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]

  public static int test2(int);
    descriptor: (I)I
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=1
         0: iinc          0, 20
         3: iload_0
         4: istore_1
         5: iinc          0, 30
         8: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        11: iload_0
        12: invokevirtual #3                  // Method java/io/PrintStream.println:(I)V
        15: iload_1
        16: ireturn
        17: astore_2
        18: iinc          0, 30
        21: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        24: iload_0
        25: invokevirtual #3                  // Method java/io/PrintStream.println:(I)V
        28: aload_2
        29: athrow
      Exception table:
         from    to  target type
             0     5    17   any
      LineNumberTable:
        line 17: 0
        line 18: 3
        line 20: 5
        line 21: 8
        line 18: 15
        line 20: 17
        line 21: 21
        line 22: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0     b   I
      StackMapTable: number_of_entries = 1
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        10
         2: istore_1
         3: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
         6: iload_1
         7: invokestatic  #4                  // Method test1:(I)I
        10: invokevirtual #3                  // Method java/io/PrintStream.println:(I)V
        13: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        16: iload_1
        17: invokestatic  #5                  // Method test2:(I)I
        20: invokevirtual #3                  // Method java/io/PrintStream.println:(I)V
        23: return
      LineNumberTable:
        line 26: 0
        line 27: 3
        line 28: 13
        line 29: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  args   [Ljava/lang/String;
            3      21     1   num   I
}